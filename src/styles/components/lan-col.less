@col-prefix-cls: lan-col;
@grid-columns: 24;

.make-row() {
  height: auto;
  zoom: 1;
  display: block;
  position: relative;
  &:after {
    content: '';
    display: block;
    clear: both;
  }
}
.float-grid-columns(@class) {
  .col(@index) { // initial
    @item: ~".@{col-prefix-cls}-span@{class}-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general
    @item: ~".@{col-prefix-cls}-span@{class}-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
      float: left;
    }
  }
  .col(1); // kickstart it
}

.loop-grid-columns(@index, @class) when (@index > 0) {
  .@{col-prefix-cls}-span@{class}-@{index} {
    display: block;
    width: percentage((@index / @grid-columns));
  }
  .@{col-prefix-cls}@{class}-push-@{index} {
    left: percentage((@index / @grid-columns));
  }
  .@{col-prefix-cls}@{class}-pull-@{index} {
    right: percentage((@index / @grid-columns));
  }
  .@{col-prefix-cls}@{class}-offset-@{index} {
    margin-left: percentage((@index / @grid-columns));
  }
  .loop-grid-columns((@index - 1), @class);
}

.make-col(@class: ~'') {
  .float-grid-columns(@class);
  .loop-grid-columns(@grid-columns, @class);
}
.lan-row {
  .make-row();
  .lan-col {
    box-sizing: border-box;
    position: relative;
  }
}
.make-col();


